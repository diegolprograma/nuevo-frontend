{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.URL = environment.URL + 'auth/';\n  }\n  nuevo(nuevoUsuario) {\n    return this.httpClient.post(this.URL + 'nuevo', nuevoUsuario);\n  }\n  login(loginUsuario) {\n    return this.httpClient.post(this.URL + 'login', loginUsuario);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,QAAG,GAAGH,WAAW,CAACI,GAAG,GAAG,OAAO;EAEe;EAExCC,KAAK,CAACC,YAA0B;IACrC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,IAAI,CAACH,GAAG,GAAG,OAAO,EAAEE,YAAY,CAAC;EACpE;EAEOE,KAAK,CAACC,YAA0B;IACrC,OAAO,IAAI,CAACN,UAAU,CAACI,IAAI,CAAS,IAAI,CAACH,GAAG,GAAG,OAAO,EAAEK,YAAY,CAAC;EACvE;EAAC;qBAZWR,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAS,SAAXT,WAAW;IAAAU,YAFV;EAAM","names":["environment","AuthService","constructor","httpClient","URL","nuevo","nuevoUsuario","post","login","loginUsuario","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbook/Documents/diego/Programacion/Visual Studio/nuevo proyecto/frontend/src/app/service/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NuevoUsuario } from '../model/nuevo-usuario';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginUsuario } from '../model/login-usuario';\nimport { JwtDto } from '../model/jwt-dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  URL = environment.URL + 'auth/';\n\n  constructor(private httpClient: HttpClient) { }\n\n public nuevo(nuevoUsuario: NuevoUsuario): Observable<any>{\n   return this.httpClient.post<any>(this.URL + 'nuevo', nuevoUsuario);\n }\n\n public login(loginUsuario: LoginUsuario): Observable<JwtDto>{\n   return this.httpClient.post<JwtDto>(this.URL + 'login', loginUsuario)\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}